name: Build Docker Image and Release

on:
    release:
        types: [created]

jobs:
    build-and-release:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3

            - name: Get project name
              id: project_name
              run: |
                  if [ -f package.json ]; then
                    echo "::set-output name=name::$(node -p "require('./package.json').name")"
                  elif [ -f Makefile ]; then
                    echo "::set-output name=name::$(grep "BINARY_NAME" Makefile | cut -d '=' -f2 | tr -d ' ')"
                  else
                    echo "::set-output name=name::ldor"
                  fi
              shell: bash

            - name: Build Docker image
              run: |
                  IMAGE_NAME=${{ steps.project_name.outputs.name }}
                  docker build -t $IMAGE_NAME:${{ github.ref_name }} .
                  docker save $IMAGE_NAME:${{ github.ref_name }} > $IMAGE_NAME-${{ github.ref_name }}.tar

            - name: Debug - List files
              run: ls -lh

            - name: Create Release
              id: create_release
              uses: softprops/action-gh-release@v2
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  files: ${{ steps.project_name.outputs.name }}-${{ github.ref_name }}.tar
                  draft: false
                  prerelease: false

            - name: Debug - Release Info
              run: |
                  echo "Release created with tag: ${{ github.ref_name }}"
                  echo "Docker image tar file: ${{ steps.project_name.outputs.name }}-${{ github.ref_name }}.tar"
